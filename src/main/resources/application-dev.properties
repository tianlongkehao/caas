server.port:8082

# datasource
spring.datasource.url = jdbc:mysql://192.168.0.76:3306/epm_paas?characterEncoding=utf-8&autoReconnect=true
spring.datasource.username = root
spring.datasource.password = 123456
spring.datasource.driverClassName = com.mysql.jdbc.Driver
# Specify the DBMS
spring.jpa.database = MYSQL
# Show or not log for each sql query
spring.jpa.show-sql = true
# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = update
# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
# stripped before adding them to the entity manager)
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

#temp code file path()
paas.codetemp.path=../codetemp
#temp image file path()
paas.image.path=../downimage

#ceph()
ceph.ssh.mountexec=mount -t ceph 192.168.0.71:6789:/ /mnt/k8s/ -o name=admin,secretfile=admin.secret
ceph.ssh.mountpoint=/mnt/k8s/
ceph.ssh.cephdir=/etc/ceph/
ceph.conf=ceph.conf
ceph.name=admin
ceph.monitor=192.168.0.71:6789,192.168.0.72:6789,192.168.0.73:6789
ceph.key=QVFEVUtTbFpxVC9TRWhBQWx2dG1tRHFjUWNhMHptWUN3NVNJbmc9PQo=


#docker()
docker.io.url=tcp://192.168.0.76:28015
docker.io.dockerCertPath=/etc/docker
docker.io.username=192.168.0.76:5000
docker.io.apiVersion=1.21
docker.io.password=root
docker.io.email=xx@bonc.com.cn
docker.io.serverAddress=http://192.168.0.76:5000/v1/
docker.io.nodeUrl=tcp://192.168.0.80:28015,tcp://192.168.0.81:28015,tcp://192.168.0.82:28015
docker.io.type=tcp
docker.io.port=28015

#docker.log
docker.log.tail=1000
docker.log.size=524288
docker.log.await=200
docker.log.download=3600

#docker registry()
docker.registry.api.url=http://192.168.0.76:5000
docker.registry.api.username=docker
docker.registry.api.password=docker

#kubernetes()
kubernetes.api.endpoint=http://192.168.0.75:8080/
kubernetes.api.username=root
kubernetes.api.password=root.123
kubernetes.api.startport=30400
kubernetes.api.endport=32750
kubernetes.api.address=192.168.0.75

#etcd
etcd.client.url=http://192.168.0.75:2379
etcd.client.domain=cluster.local

#nginxConf()
nginxConf.io=true
nginxConf.io.serverAddr=bonc.yz

#nginxserver
nginx.service.zone=dmz,dmz1,user

#yum_source
yumConf.io.address=192.168.0.29

#elasticsearch host
es.io.host=192.168.50.3:8300
es.io.cluster-name=bonc_docker

#resource address
resourceMmanage.address=http://coptest.bonc.yz/resreq/restlet/resourceArchive/showAllResource

#cas sso
cas.enable=false
cas.server-logout-url=http://coptest.bonc.yz/cas/logout?service=http://coptest.bonc.yz/portal/

#cas client config
cas.server-url-prefix=http://coptest.bonc.yz/cas
cas.server-login-url=http://coptest.bonc.yz/cas/login
cas.client-host-url=http://localhost:8082

#monitor
monitor.k8s.namespace=kube-system
monitor.k8s.service=monitoring-influxdb
monitor.url=http://192.168.0.81:30003
monitor.username=root
monitor.password=root.123
monitor.dbName=k8s

#ratio.memtocpu=4
ratio.limittorequestcpu=64
ratio.limittorequestmemory=8
#login authcode
login.showAuthCode=false

#login sftp
sftp.host=192.168.0.80
sftp.user=root
sftp.password=Docker
#debug ssh
ssh.host=http://192.168.0.75:4200/ssh

net.api.endpoint=http://192.168.0.82:8282
net.api.username=net
net.api.password=net
net.api.port=8282

#service create
service.cpu.size=1,2,4
service.memory.size=4,8,16

#entry cmd
entry.host=192.168.0.76:8011

#DNSMonitor
monitor.image.name=192.168.0.76:5000/busybox:latest
monitor.name=dns-monitor
#rest resource
rest.resource.cpu = 4
rest.resource.memory = 16
